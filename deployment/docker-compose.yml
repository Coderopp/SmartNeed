version: '3.8'

services:
  # PostgreSQL with pgvector extension
  database:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_DB: smartneed
      POSTGRES_USER: smartneed
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deployment/scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U smartneed -d smartneed"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: ../deployment/Dockerfile.backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://smartneed:password@database:5432/smartneed
      - REDIS_URL=redis://redis:6379
    env_file:
      - config/api_keys.env
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./config:/app/config
      - ./sheets/auth:/app/sheets/auth
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: ../deployment/Dockerfile.frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx.conf:/etc/nginx/nginx.conf
      - ./deployment/ssl:/etc/ssl/certs
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

  # Data ingestion worker (optional)
  data-worker:
    build:
      context: ./backend
      dockerfile: ../deployment/Dockerfile.backend
    command: python -m celery worker -A app.tasks.celery --loglevel=info
    environment:
      - DATABASE_URL=postgresql://smartneed:password@database:5432/smartneed
      - REDIS_URL=redis://redis:6379
    env_file:
      - config/api_keys.env
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./config:/app/config
      - ./sheets/auth:/app/sheets/auth
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: smartneed-network
