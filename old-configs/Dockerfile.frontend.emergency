# TEMPORARY FRONTEND-ONLY DOCKERFILE FOR EMERGENCY DEPLOYMENT
# This temporarily replaces ALL configurations to force React deployment

FROM node:18-alpine as build

WORKDIR /app

# Copy frontend package files from frontend directory
COPY frontend/package.json frontend/package-lock.json ./

# Install React dependencies
RUN npm ci

# Copy frontend source code
COPY frontend/ .

# Build React application  
RUN npm run build

# Production nginx stage
FROM nginx:alpine

# Copy React build
COPY --from=build /app/build /usr/share/nginx/html

# Simple nginx config
RUN echo 'server { \
  listen 80; \
  root /usr/share/nginx/html; \
  index index.html; \
  location / { try_files $uri $uri/ /index.html; } \
}' > /etc/nginx/conf.d/default.conf

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
